Task no 1
Deletion at the start of doubly linked list.

#include<iostream>
using namespace std;
class Node{
	public:
		int data;
		Node* next;
		Node* prev;
		Node(int data){
			this->data=data;
			this->prev=NULL;
			this->next=NULL;
		}
		~Node(){
		    int val = this->data;
		    if(this->next != NULL){
			delete next;
			this->next = NULL;
		    }
		    cout<<"Memory free for"<<val<<endl;
		}
};
void insertAtStart(Node* &head, int d){
	Node* n = new Node(d);
	n->next = head;
    head->prev = n;
    head = n;
}
void deleteNode(int position, Node* &head){
	if(position == 1){
		Node* n = head;
		n->next->prev = NULL;
		head = n->next;
		n->next = NULL;
		delete n;
	}
}
void print(Node* &head){
	Node* n = head;
	while(n!= NULL){
		cout<<n->data<<" ";
		n = n->next;
	}
	cout<<endl;
}
int main() {
    Node* head = NULL;
    int n, value;
    
    cout << "Enter the number of elements: ";
    cin >> n;
    
    cout << "Enter the elements: ";
    for (int i = 0; i < n; i++) {
        cin >> value;
        insertAtStart(head, value);
    }
    print(head);
    cout << "Enter value to insert in the start: ";
    cin >> value;
    insertAtStart(head, value);
    cout << "After Insertion in the Middle: ";
    print(head);
    deleteNode(3, head);
    print (head);
    return 0;
}
